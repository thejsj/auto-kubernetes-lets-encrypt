apiVersion: v1
kind: Secret
metadata:
  name: auto-kubernetes-lets-encrypt-certs
type: Opaque
# Create an empty secret (with no data) in order for the update to work
---
apiVersion: batch/v1
kind: Job
metadata:
  name: auto-kubernetes-lets-encrypt
  labels:
    app: auto-kubernetes-lets-encrypt
spec:
  template:
    metadata:
      name: auto-kubernetes-lets-encrypt
      labels:
        app: auto-kubernetes-lets-encrypt
    spec:
      containers:
      - image: *IMAGE_NAME*
        name: auto-kubernetes-lets-encrypt
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: 80
        readinessProbe:
          httpGet:
            path: /health
            port: 80
        ports:
        - name: main
          containerPort: 80
        env:
        - name: DOMAINS
          value: "*SUBDOMAIN*.jorge.fail"
        - name: EMAIL
          value: jorge.silva@thejsj.com
        - name: SECRET_NAME
          value: auto-kubernetes-lets-encrypt-certs
        - name: CA_SERVER
          value: https://acme-staging.api.letsencrypt.org/directory
        - name: LETS_ENCRYPT_USER_SECRET_NAME
          value: auto-kubernetes-lets-encrypt-user
        - name: LETS_ENCRYPT_USER_CERT
          valueFrom:
            secretKeyRef:
              name: auto-kubernetes-lets-encrypt-user
              key: private_key
        - name: LETS_ENCRYPT_USER_REGISTRATION
          valueFrom:
            secretKeyRef:
              name: auto-kubernetes-lets-encrypt-user
              key: registration
      restartPolicy: Never
---
apiVersion: v1
kind: Service
metadata:
  name: auto-kubernetes-lets-encrypt
spec:
  selector:
    app: auto-kubernetes-lets-encrypt
  type: LoadBalancer
  ports:
  - protocol: "TCP"
    nodePort: 31114
    port: 80
